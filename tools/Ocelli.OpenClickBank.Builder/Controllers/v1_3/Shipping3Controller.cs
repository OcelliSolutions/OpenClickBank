//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace Ocelli.OpenClickBank.Builder.Models
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    [Microsoft.AspNetCore.Mvc.Route("rest")]

    public abstract class Shipping3ControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Returns a count of physical goods orders matching the shipping criteria.
        /// </summary>
        /// <param name="status">Can be 'shipped', 'notshipped' or 'all' - to find related orders.</param>
        /// <param name="days">Return orders within the last n days. If start and end date are specified, they will take precedence over this value. If neither days, startDate or endDate is specified, it will default to last 30 days or orders.</param>
        /// <param name="startDate">Instead of using the days parameter, a user can specify a date range (yyyy-mm-dd). This is the start date</param>
        /// <param name="endDate">Instead of using the days parameter, a user can specify a date range (yyyy-mm-dd). This is the endDate</param>
        /// <param name="receipt">Search the physical good order by receipt. If this parameter is specified, the other search parameters will be ignored.</param>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("1.3/shipping3/count")]
        public abstract System.Threading.Tasks.Task Count([Microsoft.AspNetCore.Mvc.FromQuery] string? status = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? days = null, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? startDate = null, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? endDate = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? receipt = null);

        /// <summary>
        /// List physical goods orders matching the shipping criteria. Only the first 100 orders will be returned.&amp;nbsp;This method supports pagination, so if the second page of the next 100 items is required a request header 'Page' with value 2 will return them.
        /// </summary>
        /// <param name="status">Can be 'shipped', 'notshipped' or 'all' - to find related orders.</param>
        /// <param name="days">Return orders within the last n days. If start and end date are specified, they will take precedence over this value. If neither days, startDate or endDate is specified, it will default to last 30 days or orders.</param>
        /// <param name="startDate">Instead of using the days parameter, a user can specify a date range (yyyy-mm-dd). This is the start date</param>
        /// <param name="endDate">Instead of using the days parameter, a user can specify a date range (yyyy-mm-dd). This is the endDate</param>
        /// <param name="receipt">Search the physical good order by receipt. If this parameter is specified, the other search parameters will be ignored.</param>
        /// <param name="page">Page Number. Results only return 100 records at a time</param>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("1.3/shipping3/list")]
        public abstract System.Threading.Tasks.Task List([Microsoft.AspNetCore.Mvc.FromQuery] string? status = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? days = null, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? startDate = null, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? endDate = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? receipt = null, [Microsoft.AspNetCore.Mvc.FromQuery] int? page = null);

    }

    


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603