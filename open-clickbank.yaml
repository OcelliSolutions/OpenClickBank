openapi: 3.0.1
info:
  title: ClickBank API
  description: This document is created and maintained by the community and is designed to be a non-state specific specification. Please refer to your regions documentation for specific details and deviations.Please keep in mind that there are rate limits and other terms of use enforced by ClickBank. This document is only designed to give developers a standard used for code generation and testing.
  version: '1.3'
servers:
  - url: https://api.clickbank.com/rest
paths:
  /1.3/debug:
    get:
      tags:
        - Debug
      summary: 'When you send a request to the debugging service, it returns the request context information including the security context information. This can be useful when correcting issues with the ClickBank APIs.'
      operationId: GetDebug
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
        '403':
          description: Forbidden
  /rest/1.3/images/list:
    get:
      tags:
        - Images
      summary: Lists images associated with a site
      description: '<b>Permissions Required</b>: api_products_client • HAS_DEVELOPER_KEY'
      operationId: List
      parameters:
        - name: site
          in: query
          description: The site owning the images
          schema:
            type: string
        - name: type
          in: query
          description: 'The image type.  Must be PRODUCT, BANNER, or BANNER_BG'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: approvedOnly
          in: query
          description: 'boolean - if true only approved images [Default = true]'
          schema:
            type: boolean
        - name: page
          in: query
          description: Page Number. Results only return 100 records at a time
          schema:
            type: integer
            format: int32
            default: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageListResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageListResult'
        '206':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageListResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageListResult'
        '403':
          description: Forbidden
  '/rest/1.3/orders2/{receipt}/reinstate':
    post:
      tags:
        - Orders2
      summary: '*BETA* Allows a vendor to restart a cancelled subscription'
      description: '<b>Permissions Required</b>: HAS_DEVELOPER_KEY • api_subscription_modifications'
      operationId: Reinstate
      parameters:
        - name: receipt
          in: query
          schema:
            type: string
        - name: sku
          in: query
          description: The item number of the subscription product that should be reinstated for the order
          schema:
            type: string
        - name: receipt
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
  '/rest/1.3/orders2/{receipt}/pause':
    post:
      tags:
        - Orders2
      description: '<b>Permissions Required</b>: HAS_DEVELOPER_KEY • api_subscription_modifications'
      operationId: Pause
      parameters:
        - name: receipt
          in: query
          schema:
            type: string
        - name: restartDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: sku
          in: query
          schema:
            type: string
        - name: receipt
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
  '/rest/1.3/orders2/{receipt}/extend':
    post:
      tags:
        - Orders2
      description: '<b>Permissions Required</b>: HAS_DEVELOPER_KEY • api_subscription_modifications'
      operationId: Extend
      parameters:
        - name: receipt
          in: query
          schema:
            type: string
        - name: numPeriods
          in: query
          schema:
            type: integer
            format: int32
        - name: sku
          in: query
          schema:
            type: string
        - name: receipt
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
  '/rest/1.3/orders2/{receipt}/changeProduct':
    post:
      tags:
        - Orders2
      description: '<b>Permissions Required</b>: HAS_DEVELOPER_KEY • api_order_write • api_subscription_modifications'
      operationId: ChangeProduct
      parameters:
        - name: newSku
          in: query
          schema:
            type: string
        - name: oldSku
          in: query
          schema:
            type: string
        - name: receipt
          in: query
          schema:
            type: string
        - name: applyProratedRefund
          in: query
          schema:
            type: boolean
        - name: carryAffiliate
          in: query
          schema:
            type: boolean
        - name: nextRebillDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: receipt
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
  '/rest/1.3/orders2/{receipt}/changeAddress':
    post:
      tags:
        - Orders2
      description: '<b>Permissions Required</b>: HAS_DEVELOPER_KEY • api_order_write'
      operationId: ChangeAddress
      parameters:
        - name: address1
          in: query
          schema:
            type: string
        - name: city
          in: query
          schema:
            type: string
        - name: countryCode
          in: query
          schema:
            type: string
        - name: receipt
          in: query
          schema:
            type: string
        - name: address2
          in: query
          schema:
            type: string
        - name: county
          in: query
          schema:
            type: string
        - name: firstName
          in: query
          schema:
            type: string
        - name: lastName
          in: query
          schema:
            type: string
        - name: postalCode
          in: query
          schema:
            type: string
        - name: province
          in: query
          schema:
            type: string
        - name: receipt
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
  /rest/1.3/orders2/count:
    get:
      tags:
        - Orders2
      summary: 'Same as the list command, except that this one returns the count of the orders returned based on the search criteria.'
      description: '<b>Permissions Required</b>: api_order_read • HAS_DEVELOPER_KEY'
      operationId: Count
      parameters:
        - name: startDate
          in: query
          description: The beginning date for the search (yyyy-mm-dd)
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: endDate
          in: query
          description: The end date for the search (yyyy-mm-dd)
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: type
          in: query
          description: 'The type of transactions to be returned. Supported types are [SALE / RFND / CGBK / FEE / BILL / TEST_SALE / TEST_BILL / TEST_RFND / TEST_FEE]. If not specified all types will be returned. If an invalid type is specified, no transactions will be returned.'
          schema:
            type: string
        - name: vendor
          in: query
          description: The vendor name. Supports wildcard searches using the '%' character. (Wildcards are converted to %25 after url encoding is done by the client)
          schema:
            type: string
        - name: affiliate
          in: query
          description: 'The affiliate name. Supports the word ''none'' to search for transactions without affiliates, and wildcard searches using the ''%'' character. (Wilcards are converted to %25 after url encoding is done by the client)'
          schema:
            type: string
        - name: lastName
          in: query
          description: Customers last name. Supports wildcard searches using the '%' character. (Wildcards are converted to %25 after url encoding is done by the client)
          schema:
            type: string
        - name: item
          in: query
          description: The item number of the order
          schema:
            type: string
        - name: email
          in: query
          description: The email of the customer. Supports wildcard searches using the '%' character. (Wildcards are converted to %25 after url encoding is done by the client)
          schema:
            type: string
        - name: tid
          in: query
          description: The TID (Tracking ID / Promo Code) to search on.  This will search both vendor and affiliate tracking codes and be returned in the promo field
          schema:
            type: string
        - name: postalCode
          in: query
          description: Customer's zip or postal code. Supports wildcard searches.
          schema:
            type: string
        - name: role
          in: query
          description: 'Role account was of transaction options are [VENDOR, AFFILIATE]'
          schema:
            $ref: '#/components/schemas/RoleAccount'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                format: int32
        '403':
          description: Forbidden
  /rest/1.3/orders2/list:
    get:
      tags:
        - Orders2
      description: '<b>Permissions Required</b>: api_order_read • HAS_DEVELOPER_KEY'
      operationId: List
      parameters:
        - name: startDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: type
          in: query
          schema:
            type: string
        - name: vendor
          in: query
          schema:
            type: string
        - name: affiliate
          in: query
          schema:
            type: string
        - name: lastName
          in: query
          schema:
            type: string
        - name: item
          in: query
          schema:
            type: string
        - name: email
          in: query
          schema:
            type: string
        - name: tid
          in: query
          schema:
            type: string
        - name: role
          in: query
          schema:
            $ref: '#/components/schemas/RoleAccount'
        - name: postalCode
          in: query
          schema:
            type: string
        - name: amount
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderList'
        '206':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderList'
        '403':
          description: Forbidden
  '/rest/1.3/orders2/{receipt}':
    head:
      tags:
        - Orders2
      operationId: GetOrderStatus
      parameters:
        - name: receipt
          in: query
          schema:
            type: string
        - name: sku
          in: query
          schema:
            type: string
        - name: receipt
          in: path
          required: true
          schema:
            type: string
      responses:
        '403':
          description: Forbidden
    get:
      tags:
        - Orders2
      description: '<b>Permissions Required</b>: api_order_read • HAS_DEVELOPER_KEY'
      operationId: GetOrder
      parameters:
        - name: receipt
          in: query
          schema:
            type: string
        - name: sku
          in: query
          schema:
            type: string
        - name: receipt
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderList'
        '403':
          description: Forbidden
  '/rest/1.3/orders2/{receipt}/upsells':
    get:
      tags:
        - Orders2
      description: '<b>Permissions Required</b>: api_order_read • HAS_DEVELOPER_KEY'
      operationId: Upsells
      parameters:
        - name: receipt
          in: query
          schema:
            type: string
        - name: changeDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: sku
          in: query
          schema:
            type: string
        - name: receipt
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderList'
        '204':
          description: No Content
        '403':
          description: Forbidden
  '/rest/1.3/orders2/{receipt}/changeDate':
    post:
      tags:
        - Orders2
      description: '<b>Permissions Required</b>: HAS_DEVELOPER_KEY • api_subscription_modifications'
      operationId: ChangeDate
      parameters:
        - name: receipt
          in: query
          schema:
            type: string
        - name: changeDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: sku
          in: query
          schema:
            type: string
        - name: receipt
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
  '/rest/1.3/products/{sku}':
    get:
      tags:
        - Products
      summary: Gets a product
      operationId: GetProduct
      parameters:
        - name: sku
          in: query
          schema:
            type: string
        - name: site
          in: query
          description: The site owning the product to be retrieved.
          schema:
            type: string
        - name: sku
          in: path
          required: true
          schema:
            type: string
      responses:
        '403':
          description: Forbidden
    put:
      tags:
        - Products
      summary: Saves a product with the passed in parameters
      operationId: UpdateProduct
      parameters:
        - name: sku
          in: query
          schema:
            type: string
        - name: site
          in: query
          description: The site owning the product to be saved.
          schema:
            type: string
        - name: currency
          in: query
          description: The currency the product is sold in.
          schema:
            type: string
        - name: price
          in: query
          description: 'The price for the product.  Or in the case of RECURRING or RECURRING_PHYSICAL products, the initial price.'
          schema:
            type: string
        - name: language
          in: query
          description: 'The language of the product.  Must be either DE (German), EN (English), ES, (Spanish), FR (French), IT (Italian), or PT (Portuguese)'
          schema:
            type: string
        - name: title
          in: query
          description: The title of the product
          schema:
            type: string
        - name: digital
          in: query
          description: product has digital component
          schema:
            type: string
        - name: physical
          in: query
          description: product has physical component
          schema:
            type: string
        - name: digitalRecurring
          in: query
          description: product has digital recurring component
          schema:
            type: string
        - name: physicalRecurring
          in: query
          description: product has physical recurring component
          schema:
            type: string
        - name: categories
          in: query
          description: 'The categories for digital products.  At least one is required for a product with a digital component, multiple may be specified. Must be either EBOOK, SOFTWARE, GAMES, AUDIO, VIDEO, or MEMBER_SITE. Providing a category for a product without a digital component will result in an error.'
          schema:
            type: string
        - name: skipConfirmationPage
          in: query
          description: 'Whether or not to skip confirmation page.  This parameter is role restricted.  If you do not have the role, it will not be honored.'
          schema:
            type: string
        - name: thankYouPage
          in: query
          description: The thank you page for desktops. Either thankYouPage or mobileThankYouPage is required
          schema:
            type: string
        - name: mobileThankYouPage
          in: query
          description: The thank you page for mobile devices.
          schema:
            type: string
        - name: rebillPrice
          in: query
          description: In the case of RECURRING or RECURRING_PHYSICAL (required) products the rebill price.
          schema:
            type: string
        - name: rebillCommission
          in: query
          description: In the case of RECURRING or RECURRING_PHYSICAL products the rebill commission.
          schema:
            type: string
        - name: trialPeriod
          in: query
          description: In the case of RECURRING or RECURRING_PHYSICAL (required) products the trial period.  Must  be either 0 or a whole number between 3 and 31.
          schema:
            type: string
        - name: frequency
          in: query
          description: 'In the case of RECURRING or RECURRING_PHYSICAL (required) products the rebill frequency. Must be either WEEKLY, BI_WEEKLY, MONTHLY, QUARTERLY, HALF_YEARLY or YEARLY'
          schema:
            type: string
        - name: duration
          in: query
          description: In the case of RECURRING or RECURRING_PHYSICAL (required) products the rebill duration.
          schema:
            type: string
        - name: shippingProfile
          in: query
          description: In the case of PHYSICAL or RECURRING_PHYSICAL products the name of the shipping profile
          schema:
            type: string
        - name: purchaseCommission
          in: query
          description: The commission rate for the product - if unspecified the sites commission rate will be used.
          schema:
            type: string
        - name: description
          in: query
          description: In the case of PHYSICAL or RECURRING_PHYSICAL (required) the description of the product.
          schema:
            type: string
        - name: image
          in: query
          description: The id of the image associated to the product
          schema:
            type: string
        - name: pitchPage
          in: query
          description: The URL where you pitch your product. This might be the same as the HopLink Target URL. Either pitchPage or mobilePitchPage is required.
          schema:
            type: string
        - name: mobilePitchPage
          in: query
          description: The URL where you pitch your product to customers on mobile devices. This might be the same as the HopLink Target URL. Either pitchPage or mobilePitchPage is required.
          schema:
            type: string
        - name: saleRefundDaysLimit
          in: query
          description: The number days within which a sale can be refunded
          schema:
            type: string
        - name: rebillRefundDaysLimit
          in: query
          description: The number days within which a rebill can be refunded
          schema:
            type: string
        - name: deliveryMethod
          in: query
          description: The method of delivery.
          schema:
            type: string
        - name: deliverySpeed
          in: query
          description: The speed of delivery.
          schema:
            type: string
        - name: preRebillNotificationOverride
          in: query
          description: 'When set, Pre-rebill notificaitons will be sent when the frequency is greater than the required cycle.'
          schema:
            type: string
        - name: preRebillNotificationLeadTime
          in: query
          description: 'The number of days before the rebill notification.  When enabled, a Pre-rebill notification will be sent to the number equal to the number of days indicated in the lead time and will apply to the rest of the subscription.'
          schema:
            type: string
        - name: sku
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
      responses:
        '403':
          description: Forbidden
    delete:
      tags:
        - Products
      operationId: DeleteProduct
      parameters:
        - name: sku
          in: query
          schema:
            type: string
        - name: site
          in: query
          schema:
            type: string
        - name: sku
          in: path
          required: true
          schema:
            type: string
      responses:
        '403':
          description: Forbidden
  /rest/1.3/products/list:
    get:
      tags:
        - Products
      operationId: List
      parameters:
        - name: site
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '403':
          description: Forbidden
  /rest/1.3/quickstats/count:
    get:
      tags:
        - Quickstats
      operationId: Count
      parameters:
        - name: startDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: account
          in: query
          schema:
            type: string
      responses:
        '403':
          description: Forbidden
  /rest/1.3/quickstats/list:
    get:
      tags:
        - Quickstats
      operationId: List
      parameters:
        - name: startDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: account
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '403':
          description: Forbidden
  /rest/1.3/quickstats/accounts:
    get:
      tags:
        - Quickstats
      operationId: Accounts
      responses:
        '403':
          description: Forbidden
  '/rest/1.3/shipping3/shipnotice/{receipt}':
    post:
      tags:
        - Shipnotice
      operationId: CreateShipnotice
      parameters:
        - name: receipt
          in: query
          schema:
            type: string
        - name: date
          in: query
          schema:
            type: string
        - name: carrier
          in: query
          schema:
            type: string
        - name: tracking
          in: query
          schema:
            type: string
        - name: comments
          in: query
          schema:
            type: string
        - name: item
          in: query
          schema:
            type: string
        - name: fillOrder
          in: query
          schema:
            type: string
        - name: receipt
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShipnoticeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateShipnoticeRequest'
      responses:
        '403':
          description: Forbidden
    get:
      tags:
        - Shipnotice
      operationId: GetShipnotice
      parameters:
        - name: receipt
          in: query
          schema:
            type: string
        - name: receipt
          in: path
          required: true
          schema:
            type: string
      responses:
        '403':
          description: Forbidden
  /rest/1.3/shipping3/count:
    get:
      tags:
        - Shipping3
      operationId: Count
      parameters:
        - name: status
          in: query
          schema:
            type: string
        - name: days
          in: query
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: receipt
          in: query
          schema:
            type: string
      responses:
        '403':
          description: Forbidden
  /rest/1.3/shipping3/list:
    get:
      tags:
        - Shipping3
      operationId: List
      parameters:
        - name: status
          in: query
          schema:
            type: string
        - name: days
          in: query
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})'
            type: string
            format: date
        - name: receipt
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '403':
          description: Forbidden
  '/rest/1.3/tickets/refundAmounts/{receipt}':
    get:
      tags:
        - Tickets
      operationId: RefundAmounts
      parameters:
        - name: receipt
          in: query
          schema:
            type: string
        - name: refundType
          in: query
          schema:
            type: string
        - name: refundAmount
          in: query
          schema:
            type: string
        - name: sku
          in: query
          schema:
            type: string
        - name: receipt
          in: path
          required: true
          schema:
            type: string
      responses:
        '403':
          description: Forbidden
  '/rest/1.3/tickets/{id}':
    get:
      tags:
        - Tickets
      operationId: GetTicket
      parameters:
        - name: id
          in: query
          schema:
            type: string
        - name: action
          in: query
          schema:
            type: string
        - name: comment
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '403':
          description: Forbidden
    put:
      tags:
        - Tickets
      operationId: UpdateTicket
      parameters:
        - name: id
          in: query
          schema:
            type: string
        - name: action
          in: query
          schema:
            type: string
        - name: comment
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTicketRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateTicketRequest'
      responses:
        '403':
          description: Forbidden
  '/rest/1.3/tickets/{id}/returned':
    post:
      tags:
        - Tickets
      operationId: Returned
      parameters:
        - name: id
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: receipt
          in: query
          schema:
            type: string
        - name: createDateFrom
          in: query
          schema:
            type: string
        - name: createDateTo
          in: query
          schema:
            type: string
        - name: updateDateFrom
          in: query
          schema:
            type: string
        - name: updateDateTo
          in: query
          schema:
            type: string
        - name: closeDateFrom
          in: query
          schema:
            type: string
        - name: closeDateTo
          in: query
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '403':
          description: Forbidden
  /rest/1.3/tickets/list:
    get:
      tags:
        - Tickets
      operationId: List
      parameters:
        - name: type
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: receipt
          in: query
          schema:
            type: string
        - name: createDateFrom
          in: query
          schema:
            type: string
        - name: createDateTo
          in: query
          schema:
            type: string
        - name: updateDateFrom
          in: query
          schema:
            type: string
        - name: updateDateTo
          in: query
          schema:
            type: string
        - name: closeDateFrom
          in: query
          schema:
            type: string
        - name: closeDateTo
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '403':
          description: Forbidden
  /rest/1.3/tickets/count:
    get:
      tags:
        - Tickets
      operationId: Count
      parameters:
        - name: type
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: receipt
          in: query
          schema:
            type: string
      responses:
        '403':
          description: Forbidden
  /rest/1.3/tickets/partialRefundDataSchema:
    get:
      tags:
        - Tickets
      operationId: PartialRefundDataSchema
      parameters:
        - name: type
          in: query
          schema:
            type: string
        - name: reason
          in: query
          schema:
            type: string
        - name: sku
          in: query
          schema:
            type: string
        - name: comment
          in: query
          schema:
            type: string
        - name: refundType
          in: query
          schema:
            type: string
        - name: refundAmount
          in: query
          schema:
            type: string
        - name: retainSubscription
          in: query
          schema:
            type: string
      responses:
        '403':
          description: Forbidden
  '/rest/1.3/tickets/{receipt}':
    post:
      tags:
        - Tickets
      operationId: CreateTicket
      parameters:
        - name: receipt
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: reason
          in: query
          schema:
            type: string
        - name: sku
          in: query
          schema:
            type: string
        - name: comment
          in: query
          schema:
            type: string
        - name: refundType
          in: query
          schema:
            type: string
        - name: refundAmount
          in: query
          schema:
            type: string
        - name: retainSubscription
          in: query
          schema:
            type: string
        - name: receipt
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
      responses:
        '403':
          description: Forbidden
components:
  schemas:
    ContactField:
      type: object
      properties:
        field:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: { }
    CreateShipnoticeRequest:
      type: object
      additionalProperties: { }
    CreateTicketRequest:
      type: object
      additionalProperties: { }
    Currency:
      enum:
        - ARS
        - AUD
        - CAD
        - CHF
        - CLP
        - CNY
        - COP
        - CZK
        - DKK
        - EUR
        - GBP
        - HKD
        - HUF
        - IDR
        - INR
        - JPY
        - KRW
        - MXN
        - MYR
        - NOK
        - NZD
        - PHP
        - PLN
        - RUB
        - SEK
        - SGD
        - THB
        - TRY
        - USD
        - ZAR
      type: string
      additionalProperties: { }
    ImageData:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/ImageType'
        approved:
          type: boolean
      additionalProperties: { }
    ImageList:
      type: object
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageData'
          nullable: true
      additionalProperties: { }
    ImageListResult:
      type: object
      properties:
        imageList:
          $ref: '#/components/schemas/ImageList'
        total_record_count:
          type: integer
          format: int32
      additionalProperties: { }
      nullable: true
    ImageType:
      enum:
        - nil
        - PRODUCT
        - BANNER
        - BANNER_CLASSIC
        - BANNER_NEW
        - BANNER_BG
        - CUSTOM_BANNER
        - CUSTOM_BANNER_BG
        - CUSTOM_ORDERFORM
      type: string
      additionalProperties: { }
    LineItemData:
      type: object
      properties:
        itemNo:
          type: string
          nullable: true
        productTitle:
          type: string
          nullable: true
        recurring:
          type: boolean
        shippable:
          type: boolean
        customerAmount:
          type: number
          format: double
          nullable: true
        accountAmount:
          type: number
          format: double
          nullable: true
        quantity:
          type: integer
          format: int32
          nullable: true
        lineItemType:
          $ref: '#/components/schemas/LineItemType'
        rebillAmount:
          type: number
          format: double
          nullable: true
        processedPayments:
          type: integer
          format: int32
          nullable: true
        futurePayments:
          type: integer
          format: int32
          nullable: true
        nextPaymentDate:
          pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})Z'
          type: string
          description: The date is in ISO 8601 date format yyyy-mm-ddThh:mm:ssZ.
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/LineItemStatus'
        role:
          $ref: '#/components/schemas/OrderRole'
      additionalProperties: { }
    LineItemStatus:
      enum:
        - nil
        - ACTIVE
        - AUTHORIZATION_FAILURE
        - CANCELED
        - COMPLETED
        - VALIDATION_FAILURE
      type: string
      additionalProperties: { }
    LineItemType:
      enum:
        - nil
        - ORIGINAL
        - BUMP
        - CART
        - STANDARD
        - TOKEN
        - UPSELL
      type: string
      additionalProperties: { }
    OrderData:
      type: object
      properties:
        transactionTime:
          pattern: '([0-9]{4})-(?:[0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})Z'
          type: string
          description: The date is in ISO 8601 date format yyyy-mm-ddThh:mm:ssZ.
          format: date-time
          nullable: true
        receipt:
          type: string
          nullable: true
        trackingId:
          type: string
          nullable: true
        paytmentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        totalOrderAmount:
          type: number
          format: double
          nullable: true
        totalShippingAmount:
          type: number
          format: double
          nullable: true
        totalTaxAmount:
          type: number
          format: double
          nullable: true
        vendor:
          type: string
          nullable: true
        affiliate:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        declinedConsent:
          type: boolean
        email:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        customerContactInfo:
          type: array
          items:
            $ref: '#/components/schemas/ContactField'
          nullable: true
        role:
          $ref: '#/components/schemas/OrderRole'
        fullName:
          type: string
          nullable: true
        customerRefundableState:
          $ref: '#/components/schemas/RefundableState'
        vendorVariables:
          $ref: '#/components/schemas/VendorVariableElementArray'
        lineItemData:
          type: array
          items:
            $ref: '#/components/schemas/LineItemData'
          nullable: true
      additionalProperties: { }
    OrderList:
      type: object
      properties:
        orderData:
          type: array
          items:
            $ref: '#/components/schemas/OrderData'
          nullable: true
      additionalProperties: { }
      nullable: true
    OrderRole:
      enum:
        - nil
        - VENDOR
        - AFFILIATE
        - JV_TRADITIONAL
        - JV_UPSELL
      type: string
      additionalProperties: { }
    PaymentMethod:
      enum:
        - nil
        - PYPL
        - PYPL-NEW
        - VISA
        - MSTR
        - DISC
        - AMEX
        - DNRS
        - MAES
        - TEST
      type: string
      additionalProperties: { }
    RefundableState:
      enum:
        - nil
        - REFUNDABLE
        - SUGGESTED_REFUND_BLOCK
        - UNREFUNDABLE
        - ALREADY_REFUNDED
        - TOO_OLD
        - REFUND_BLOCKED
        - HAS_OPEN_REFUND
        - OVER_ELV_LIMIT
        - PROVIDER_DISCONNECTED
      type: string
      additionalProperties: { }
    RoleAccount:
      enum:
        - nil
        - VENDOR
        - AFFILIATE
      type: string
      additionalProperties: { }
    TransactionType:
      enum:
        - nil
        - SALE
        - RFND
        - CGBK
        - FEE
        - BILL
        - TEST_SALE
        - TEST_BILL
        - TEST_RFND
        - TEST_FEE
      type: string
      additionalProperties: { }
    UpdateProductRequest:
      type: object
      additionalProperties: { }
    UpdateTicketRequest:
      type: object
      additionalProperties: { }
    VendorVariableElement:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: { }
    VendorVariableElementArray:
      type: object
      properties:
        item:
          type: array
          items:
            $ref: '#/components/schemas/VendorVariableElement'
          nullable: true
      additionalProperties: { }
  securitySchemes:
    ApiKey:
      type: apiKey
      description: '&lt;Developer API Key&gt;:&lt;Clerk API Key&gt;'
      name: authorization
      in: header
security:
  - ApiKey: [ ]
tags:
  - name: Images
    description: The Images API lists the images associated with an account
    externalDocs:
      url: https://api.clickbank.com/rest/1.3/images